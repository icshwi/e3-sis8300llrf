if [ $# -ne 1 ] ; then                              
    echo "usage: sh state_change.sh <required state>"
    echo "e.g. sh state_change.sh RESET"
    exit                                            
fi         

run() {
    eval "$(dirname $0)/$1"
}

echo "Go to state $1"
eval "caput -S $LLRF_IOC_NAME:MSGS $1 >/dev/null"
usleep 500000
result=$(caget -t $LLRF_IOC_NAME)
if [ $1 == 'RESET' ]; then 
	# Special case when state request is 'RESET' as the expected new state is 'RESETTING', allow for this case.
    run "check RESETTING $result Test state change to $1"
else
	# The norman user case it that the state request matches the expected new state
    run "check $1 $result Test state change to $1"
fi
