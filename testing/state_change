if [ $# -ne 2 ] ; then                              
    echo "usage: sh state_change.sh <LLRF_INSTANCE> <required state>"
    echo "e.g. sh state_change.sh LLRF-TS2-1-1 RESET"
    exit                                            
fi         

run() {
    eval "$(dirname $0)/$1"
}

LLRF_INSTANCE=$1
req_state=$2

echo "Go to state $req_state"
eval "caput -S $LLRF_INSTANCE:MSGS $req_state >/dev/null"
usleep 500000
result=$(caget -t $LLRF_INSTANCE)
if [ $req_state == 'RESET' ]; then 
	# Special case when state request is 'RESET' as the expected new state is 'RESETTING', allow for this case.
    run "check RESETTING $result Test state change to $req_state"
else
	# The norman user case it that the state request matches the expected new state
    run "check $req_state $result Test state change to $req_state"
fi
